pipeline {
    agent any
    
    parameters {
        string(description: 'GCP Project Name', name: 'googleProjectId', defaultValue: '')
        password(description: 'GCR credential(gcloud auth print-access-token)', name: 'gcrCredentials', defaultValue: '')
        string(description: 'Docker version build tag', name: 'buildTag', defaultValue: '1.0')
        string(description: '[Helm] backend-java replicas', name: 'backendJavaReplicas', defaultValue: '2')
        string(description: '[Helm] backend-php replicas', name: 'backendPhpReplicas', defaultValue: '2')
        choice(description: '', name: 'stage', choices: ['ci','cd']) 
    }
    
    stages {
        stage('init'){
            steps{
                git 'https://github.com/abola/devops-lab-sample.git'	
            }
        }
    
        stage('ci'){
            when {
                expression { params.stage == 'ci' }
            }
            steps{
                sh "cd sample/iac/frontend-python && docker build -t gcr.io/${params.googleProjectId}/frontend-python:$BUILD_TAG ."
                sh "cd sample/iac/backend-java && mvn -Dmaven.test.skip=true package && docker build -t gcr.io/${params.googleProjectId}/backend-java:$BUILD_TAG ."
                sh "cd sample/iac/backend-php && docker build -t gcr.io/${params.googleProjectId}/backend-php:$BUILD_TAG ."
            
                sh "docker images"
                sh "docker tag gcr.io/${params.googleProjectId}/backend-java:$BUILD_TAG gcr.io/${params.googleProjectId}/backend-java:${params.buildTag}"
                sh "docker tag gcr.io/${params.googleProjectId}/backend-php:$BUILD_TAG gcr.io/${params.googleProjectId}/backend-php:${params.buildTag}"
                sh "docker tag gcr.io/${params.googleProjectId}/frontend-python:$BUILD_TAG gcr.io/${params.googleProjectId}/frontend-python:${params.buildTag}"
                sh "docker images"
                sh "docker login -u oauth2accesstoken -p ${params.gcrCredentials} https://gcr.io"
                sh "docker push gcr.io/${params.googleProjectId}/backend-java:${params.buildTag}"
                sh "docker push gcr.io/${params.googleProjectId}/backend-php:${params.buildTag}"
                sh "docker push gcr.io/${params.googleProjectId}/frontend-python:${params.buildTag}"
            }
        }
    
        stage('deploy'){
            when {
                expression { params.stage == 'cd' }
            }
            steps{
                sh "helm init && helm template sample/iac/helm --set iac.backendphp.replicas=${params.backendPhpReplicas} --set iac.backendjava.replicas=${params.backendJavaReplicas} --set iac.google.project=${params.googleProjectId} | kubectl apply -f -"
            }
        }
    }
}
